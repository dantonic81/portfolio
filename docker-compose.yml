version: '3.8'

x-common-service-config: &common-service-config
  restart: unless-stopped

services:
  etl:
    container_name: etl
    image: python:3.12-slim
    build:
      context: .
      dockerfile: ./Dockerfile
    command: ["python", "/app/etl.py"]
    volumes:
      - ./etl.py:/app/etl.py
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env


  postgres:
    image: postgres:14
    container_name: postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    <<: *common-service-config

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file:
      - .env
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nc -z -w 1 localhost 80 >/dev/null && echo 'Connection successful' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    <<: *common-service-config

  metabase:
    image: metabase/metabase
    container_name: metabase
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: ${POSTGRES_USER}
      MB_DB_PASS: ${POSTGRES_PASSWORD}
      MB_DB_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    <<: *common-service-config

volumes:
  postgres_data:
  pgadmin_data: